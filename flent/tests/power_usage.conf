## -*- mode: python; coding: utf-8 -*-

## power_usage

AGGREGATOR='timeseries'
TOTAL_LENGTH=LENGTH+2*DELAY
DESCRIPTION="Measure power usage under varying CPU stressors"
DEFAULTS={'PLOT': 'power'}

N_RUNNERS=get_test_parameter("n_cpu_runners", 1)

IPMI_COMMAND=get_test_parameter("ipmi_power_command", "power-consumption")
IPMI_HOST=get_test_parameter("ipmi_host", "localhost")

MQTT_TOPIC=get_test_parameter("mqtt_topic")
MQTT_HOST=get_test_parameter("mqtt_host", "localhost")
MQTT_PORT=get_test_parameter("mqtt_port", 8883)
MQTT_USER=get_test_parameter("mqtt_user", None)
MQTT_PASS=get_env_parameter("MQTT_PASS", None)
MQTT_PAYLOAD_KEY=get_test_parameter("mqtt_payload_key", None)

if MQTT_PASS:
    set_test_parameter("mqtt_pass", "***")


DATA_SETS = o([
    ('cpu_stressor',
     {'n_stressors': N_RUNNERS, 'interval': STEP_SIZE,
      'length': LENGTH, 'delay': DELAY, 'units': 'misc', 'runner': 'stress_ng'}),
    ('ipmi_power',
     {'user_command': IPMI_COMMAND, 'interval': STEP_SIZE, 'host': IPMI_HOST,
      'length': TOTAL_LENGTH, 'units': 'W', 'runner': 'command_output'}),
    ('mqtt_power',
     {'mqtt_topic': MQTT_TOPIC, 'mqtt_host': MQTT_HOST,
      'mqtt_user': MQTT_USER, 'mqtt_pass': MQTT_PASS,
      'payload_key': MQTT_PAYLOAD_KEY,
      'length': TOTAL_LENGTH, 'units': 'W', 'runner': 'mosquitto_sub'}),
])

PLOTS = o([
    ('power',
     {'description': 'Power consumption',
      'type': 'timeseries',
      'axis_labels': ['Watts'],
      'dual_axes': False,
      'series': [
          {'data': 'ipmi_power',
           'label': 'IPMI consumption'},
          {'data': 'mqtt_power',
           'label': 'Wall plug consumption'},
          ]}),
    ('cpu_runners',
     {'description': 'Number of CPU runners',
      'type': 'timeseries',
      'axis_labels': ['Value'],
      'dual_axes': False,
      'series': [
          {'data': 'cpu_stressor',
           'label': 'Number of stressors'},
          ]}),
    ])

include("cpu_stats.inc")
