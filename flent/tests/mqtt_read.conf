## -*- mode: python; coding: utf-8 -*-

## mqtt_read

AGGREGATOR='timeseries'
TOTAL_LENGTH=LENGTH
DESCRIPTION="Capture MQTT data"
DEFAULTS={'PLOT': 'mqtt_data'}

MQTT_TOPIC=get_test_parameter("mqtt_topic")
MQTT_HOST=get_test_parameter("mqtt_host", "localhost")
MQTT_PORT=get_test_parameter("mqtt_port", 8883)
MQTT_USER=get_test_parameter("mqtt_user", None)
MQTT_PASS=get_env_parameter("MQTT_PASS", None)
PAYLOAD_KEY=get_test_parameter("mqtt_payload_key", None)

if MQTT_PASS:
    set_test_parameter("mqtt_pass", "***")

LABEL = PAYLOAD_KEY or "MQTT value"

DATA_SETS = o([
    ('mqtt_data',
     {'mqtt_topic': MQTT_TOPIC, 'mqtt_host': MQTT_HOST,
      'mqtt_user': MQTT_USER, 'mqtt_pass': MQTT_PASS,
      'payload_key': PAYLOAD_KEY,
      'length': LENGTH, 'units': 'ms', 'runner': 'mosquitto_sub'}),
])

PLOTS = o([
    ('mqtt_data',
     {'description': 'MQTT values',
      'type': 'timeseries',
      'axis_labels': ['Value'],
      'dual_axes': False,
      'series': [
          {'data': 'mqtt_data',
           'label': LABEL},
          ]})
    ])
